// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SUShirts.Data;

namespace SUShirts.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210806191622_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("SUShirts.Data.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hex")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("SUShirts.Data.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Handled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HandledBy")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneOrDiscordTag")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("SUShirts.Data.Entities.ReservationItem", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShirtVariantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReservationId", "ShirtVariantId");

                    b.HasIndex("ShirtVariantId");

                    b.ToTable("ReservationItem");
                });

            modelBuilder.Entity("SUShirts.Data.Entities.Shirt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Hidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PrimaryColorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SecondaryColorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryColorId");

                    b.HasIndex("SecondaryColorId");

                    b.ToTable("Shirts");
                });

            modelBuilder.Entity("SUShirts.Data.Entities.ShirtVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemsLeft")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShirtId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShirtId");

                    b.ToTable("ShirtVariant");
                });

            modelBuilder.Entity("SUShirts.Data.Entities.ReservationItem", b =>
                {
                    b.HasOne("SUShirts.Data.Entities.Reservation", "Reservation")
                        .WithMany("Items")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SUShirts.Data.Entities.ShirtVariant", "ShirtVariant")
                        .WithMany()
                        .HasForeignKey("ShirtVariantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("ShirtVariant");
                });

            modelBuilder.Entity("SUShirts.Data.Entities.Shirt", b =>
                {
                    b.HasOne("SUShirts.Data.Entities.Color", "PrimaryColor")
                        .WithMany()
                        .HasForeignKey("PrimaryColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SUShirts.Data.Entities.Color", "SecondaryColor")
                        .WithMany()
                        .HasForeignKey("SecondaryColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryColor");

                    b.Navigation("SecondaryColor");
                });

            modelBuilder.Entity("SUShirts.Data.Entities.ShirtVariant", b =>
                {
                    b.HasOne("SUShirts.Data.Entities.Shirt", "Shirt")
                        .WithMany("Variants")
                        .HasForeignKey("ShirtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shirt");
                });

            modelBuilder.Entity("SUShirts.Data.Entities.Reservation", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SUShirts.Data.Entities.Shirt", b =>
                {
                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
